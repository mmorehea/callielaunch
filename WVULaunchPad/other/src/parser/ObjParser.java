package parser;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ObjParser implements FileParser {
	 private static Pattern twopart = Pattern.compile("(\\w+)\\s+(\\w+)");
	 private static Pattern fourpart = Pattern.compile("(\\w+)\\s+([\\d|\\.|-|+]+)\\s+([\\d|\\.|-|+]+)\\s+([\\d|\\.|-|+]+)");
	 File filein;

	
	public ObjParser(String name) {
		filein = new File(name);
	
	}

	@Override
	public void parse() throws FileNotFoundException {
		Scanner sc = new Scanner(new FileReader(filein));
		Matcher m,n;
		Driver.top.mkdir();
		PrintWriter output = null; 
		
		int i = 0;
		
		while(sc.hasNextLine()){
			String line = sc.nextLine();
			 m = twopart.matcher(line);
			 n = fourpart.matcher(line);
			 i++;
			if(m.matches()){
				if(output!= null)
					output.close();
				output = new PrintWriter(new File(Driver.top,m.group(2)+".obj"));
				output.write("#Wavefront .obj model generated by Quinn Jones FileParser\n\n");
				output.write("g " + m.group(2)+"\n\n");
					
			}
			else if(n.matches()){
					if(n.group(1).equals("v")){
						output.write("v ");
						output.write(Double.valueOf(n.group(2)).toString()+' ');
						output.write(Double.valueOf(n.group(3)).toString()+' ');
						output.write(Double.valueOf(n.group(4)).toString()+'\n');
					}
					else if(n.group(1).equals("f")){
						output.write("f ");
						output.write(Integer.valueOf(n.group(2)).toString()+' ');
						output.write(Integer.valueOf(n.group(3)).toString()+' ');
						output.write(Integer.valueOf(n.group(4)).toString()+'\n');
					}
					else if(n.group(1).equals("vn")){
						output.write("vn ");
						output.write(Integer.valueOf(n.group(2)).toString()+' ');
						output.write(Integer.valueOf(n.group(3)).toString()+' ');
						output.write(Integer.valueOf(n.group(4)).toString()+'\n');
					}
				}
		}
		
		output.close();
		System.out.println(i);
	
		
	}

}
