/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wvulaunchpad;

import java.awt.Component;
import java.awt.PopupMenu;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.util.Properties;


/**
 *
 * @author tonye
 */
public class WVULauchPad extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private Component frame;

    /**
     * Creates new form WVULauchPad
     */
    public WVULauchPad() {
        

        initComponents();
        option_list.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                if (evt.getValueIsAdjusting()) {
                    System.out.println("Eventhandler called");
                    if (tempPart != null) {
                        tempPart.setName((String) option_list.getSelectedValue());
                        System.out.println("Part name: " + option_list.getSelectedValue());

                    }
                    return;
                }
                System.out.println("Eventhandler ended");

            }
        });
        refreshConfigList();

        //------INITIALIZING ARRAYLIST WITH FIRST CELL
        cellsList = new ArrayList<Cell>();
        cellList.setModel(listModel);
        final int last = cellsList.size() - 1;
        final String entry = "Cell 1";
        listModel.addElement(entry);
        cellsList.add(new Cell());

        //thinking about putting this somehwere in the ListSelectionListener

        cellList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                if (evt.getValueIsAdjusting()) {
                    System.out.println("Eventhandler called here");
                    String selected = cellList.getSelectedValue().toString();
                    if ("Create New Cell".equals(selected)) {
                        tempCell = new Cell();
                        cellsList.add(tempCell);
                        cellname = "Cell " + cellsList.size();
                        listModel.addElement(cellname);
                    } else {
                        tempCell = cellsList.get(cellList.getSelectedIndex());
                        cels = cellList.getSelectedValue().toString();
                        cnameList.add(cels);
                    }
                    return;
                }
                System.out.println("Eventhandler ended");

                cellList.clearSelection();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        OpenButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        BootUp = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Options_List = new javax.swing.JScrollPane();
        option_list = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        addList = new javax.swing.JTextArea();
        remove_list = new javax.swing.JButton();
        displaySelectedFile = new javax.swing.JTextField();
        celList = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cellList = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        configList = new javax.swing.JList();
        saveButton = new javax.swing.JButton();
        ReduceButton = new javax.swing.JButton();
        sliderLabel1 = new javax.swing.JLabel();
        sliderLabel2 = new javax.swing.JLabel();
        reduceSlider = new javax.swing.JSlider();
        addCell = new javax.swing.JButton();

        org.jdesktop.layout.GroupLayout jInternalFrame1Layout = new org.jdesktop.layout.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 126, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 19, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WVU LaunchPad");

        jLabel1.setText("WVU LaunchPad");

        OpenButton.setText("Open");
        OpenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenButtonActionPerformed(evt);
            }
        });

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        BootUp.setText("BootUp");
        BootUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BootUpActionPerformed(evt);
            }
        });

        jLabel2.setText("Add List");

        jLabel3.setText("Option List");

        option_list.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Nucleus", "Axon", "Dendrites", "Body", "Input 1", "Input 2", "Input 3", "Input 4", "Input 5", "Input 6", "Input 7", "Input 8", "Input 9", "Input 10", "Input 11", "Input 12", "Input 13", "Input 14", "Input 15", "Input 16", "Input 17", "Input 18", "Input 19", "Input 20" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        option_list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Options_List.setViewportView(option_list);

        addList.setColumns(20);
        addList.setEditable(false);
        addList.setRows(5);
        jScrollPane2.setViewportView(addList);

        remove_list.setText("Remove");
        remove_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_listActionPerformed(evt);
            }
        });

        displaySelectedFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displaySelectedFileActionPerformed(evt);
            }
        });

        celList.setText("Cell List");

        cellList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(cellList);

        jScrollPane1.setViewportView(configList);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        ReduceButton.setText("Reduce");
        ReduceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReduceButtonActionPerformed(evt);
            }
        });

        sliderLabel1.setFont(new java.awt.Font("Dialog", 0, 10));
        sliderLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sliderLabel1.setText("Accuracy");

        sliderLabel2.setFont(new java.awt.Font("Dialog", 0, 10));
        sliderLabel2.setText("Performance");

        reduceSlider.setFont(new java.awt.Font("Dialog", 0, 10));

        addCell.setText("New Cell");
        addCell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCellActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(addCell, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(celList))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel3)
                                    .add(Options_List, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(AddButton)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(remove_list)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(saveButton)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(BootUp)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, 0, 0, Short.MAX_VALUE)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                                .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                                    .add(sliderLabel2)
                                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .add(sliderLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                .add(org.jdesktop.layout.GroupLayout.LEADING, reduceSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                            .add(ReduceButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))))
                    .add(layout.createSequentialGroup()
                        .add(OpenButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(displaySelectedFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 370, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 534, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(ReduceButton)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(OpenButton)
                            .add(displaySelectedFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jLabel3)
                            .add(celList)))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(sliderLabel2)
                            .add(sliderLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(reduceSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(6, 6, 6)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(Options_List, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(AddButton)
                    .add(remove_list)
                    .add(saveButton)
                    .add(addCell)
                    .add(BootUp))
                .add(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public Properties properties = new Properties();
    {
        try {
            properties.load(new FileInputStream("config.properties"));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    public String configPath = "/home/calvr/setconfig/";
    public String runtimeConfigPath = "/home/calvr/setconfig/runtimeConfig.xml";
    public String reduceScriptPath = "/home/calvr/setconfig/revisedscript.py";
    public String structWriterPath = "/home/calvr/setconfig/StructWriter.py";
    public String launchScriptPath = "/home/calvr/setconfig/launchscript.py";
    public String defaultTemplatePath = "/home/calvr/setconfig/default.xml";
    
    public Part tempPart;
    public Cell tempCell;
    public ArrayList<Part> partList = new ArrayList<Part>();
    public ArrayList<Cell> cellsList;
    public ArrayList<String> savelist = new ArrayList<String>();
    public ArrayList<String> cnameList = new ArrayList<String>();
    String addString = new String();
    File oldpath;
    DefaultListModel listModel = new DefaultListModel();
    String cellname = " ";
    String cels = " ";

    private void refreshConfigList() {
        
        File folder = new File(configPath);
        File[] listOfFiles = folder.listFiles();
        DefaultListModel dlm = new DefaultListModel();
        for (int i = 0; i < listOfFiles.length; i++) {
            dlm.addElement(listOfFiles[i].getName());
        }
        configList.setModel(dlm);
    }

    private void OpenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenButtonActionPerformed
        JFileChooser fc = new JFileChooser(oldpath);
        fc.setDialogTitle("Open Files");
        int returnVal = fc.showOpenDialog(this);
        File file = fc.getSelectedFile();
        oldpath = fc.getCurrentDirectory();
        fc.setCurrentDirectory(oldpath);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            if (file != null) {
                tempPart = new Part(file);
                partList.add(tempPart);
            }
            try {
                displaySelectedFile.setText(fc.getSelectedFile().getCanonicalPath());
            } catch (IOException ex) {
                Logger.getLogger(WVULauchPad.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_OpenButtonActionPerformed

    private void BootUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BootUpActionPerformed

        File runtimeConfig = new File(runtimeConfigPath);
        if (runtimeConfig.exists()) {
            runtimeConfig.delete();
        }
        String selectedSet = (String) configList.getSelectedValue();
        Path from = Paths.get(configPath + selectedSet);
        final Path TO = Paths.get(runtimeConfigPath);
        try {
            Files.copy(from, TO);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        String[] command = new String[2];
        command[0] = "python";
        command[1] = launchScriptPath;
        Process process = null;
        try {
            process = Runtime.getRuntime().exec(command);
            try {
                process.waitFor();
            } catch (InterruptedException ex) {
                ex.printStackTrace();
            }
            process.destroy();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        try {
            process.waitFor();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        
        runtimeConfig.deleteOnExit();
    }//GEN-LAST:event_BootUpActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed

        if (tempPart != null) {
            tempCell.addPart(tempPart);
            cellsList.add(tempCell);
            String celltolist = tempCell.cellParts(cels);
            if (!(celltolist.equals(" "))) {
                addList.append(celltolist);
                addString += celltolist + "\n";
                savelist.add(celltolist);
                addList.append("\n");
                tempPart = null;
            } else {
                JOptionPane.showMessageDialog(this, "Error, Cannot Add File Without Name", "Error Message", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_AddButtonActionPerformed

    private void remove_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_listActionPerformed

        if (!cellsList.isEmpty()) {
            String s = cnameList.remove(cnameList.size());
            Cell t = cellsList.remove(cellsList.size());
            savelist.remove(savelist.size());
            addList.replaceRange(" ", 0, addString.length());
            addString = addString.replace(t.cellParts(s), " ");
            addList.insert(addString, 0);
        }
    }//GEN-LAST:event_remove_listActionPerformed

    private void displaySelectedFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displaySelectedFileActionPerformed
    }//GEN-LAST:event_displaySelectedFileActionPerformed

private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

    String saveName = JOptionPane.showInputDialog("Name Your Set");
    final Path FROM = Paths.get(defaultTemplatePath);
    Path to = Paths.get(configPath + saveName + ".xml");
    try {
        Files.copy(FROM, to);
    } catch (IOException ex) {
        ex.printStackTrace();
    }
    try {
        ArrayList<String> toEcho = new ArrayList<String>();
        toEcho.add("python");
        toEcho.add(structWriterPath);
        toEcho.add(configPath + saveName + ".xml");
        Runtime rt = Runtime.getRuntime();
        for (Iterator<Part> it = partList.iterator(); it.hasNext();) {
            Part x = it.next();
            String[] arg = x.toStringArr();
            toEcho.add(arg[0]);
            toEcho.add(arg[1]);
        }
        System.out.println(toEcho);
        for (String s : toEcho) {
            System.out.println(s);
        }
        rt.exec(toEcho.toArray(new String[0]));
        System.out.println("end exec");
    } catch (Exception y) {
        y.printStackTrace();
    }
    refreshConfigList();

}//GEN-LAST:event_saveButtonActionPerformed

private void ReduceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReduceButtonActionPerformed
    String selectedSet = (String) configList.getSelectedValue();
    int reducedTo = reduceSlider.getValue();
    String[] command = new String[4];
    command[0] = "python";
    command[1] = reduceScriptPath;
    command[2] = selectedSet;
    command[3] = Integer.toString(reducedTo);
    
    Process process = null;
        try {
            process = Runtime.getRuntime().exec(command);
            
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        try {
            process.waitFor();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
    process.destroy();
    refreshConfigList();
    //JOptionPane.showOptionDialog(null, "Reducing Done!","Reduce", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{}, null);
}//GEN-LAST:event_ReduceButtonActionPerformed

    private void addCellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCellActionPerformed
        // TODO add your handling code here:
        tempCell = new Cell();
        cellsList.add(tempCell);
        cellname = "Cell " + cellsList.size();
        listModel.addElement(cellname);
    }//GEN-LAST:event_addCellActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WVULauchPad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WVULauchPad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WVULauchPad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WVULauchPad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                new WVULauchPad().setVisible(true);
            }
        });


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton BootUp;
    private javax.swing.JButton OpenButton;
    private javax.swing.JScrollPane Options_List;
    private javax.swing.JButton ReduceButton;
    private javax.swing.JButton addCell;
    private javax.swing.JTextArea addList;
    private javax.swing.JLabel celList;
    private javax.swing.JList cellList;
    private javax.swing.JList configList;
    private javax.swing.JTextField displaySelectedFile;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList option_list;
    private javax.swing.JSlider reduceSlider;
    private javax.swing.JButton remove_list;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel sliderLabel1;
    private javax.swing.JLabel sliderLabel2;
    // End of variables declaration//GEN-END:variables
}
